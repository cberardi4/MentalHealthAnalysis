MHDF$phys_health_interview <- ifelse(MHDF$phys_health_interview == "Yes", 1, ifelse(MHDF$phys_health_interview == "No", 2, 3))
MHDF$mental_vs_physical <- ifelse(MHDF$mental_vs_physical == "Yes", 1, ifelse(MHDF$mental_vs_physical == "No", 2, 3))
MHDF$obs_consequence <- ifelse(MHDF$obs_consequence == "No", 0, 1)
MHDF$tech_company <-ifelse(MHDF$tech_company == "Yes", 1, 0)
MHDF$benefits <-ifelse(MHDF$benefits == "Yes", 1,
ifelse(MHDF$benefits == "No", 2,3))
MHDF$care_options <-ifelse(MHDF$care_options == "Yes", 1,
ifelse(MHDF$care_options == "No", 2,3))
MHDF$wellness_program <-ifelse(MHDF$wellness_program == "Yes", 1,
ifelse(MHDF$wellness_program == "No", 2,3))
MHDF$seek_help <-ifelse(MHDF$seek_help == "Yes", 1,
ifelse(MHDF$seek_help == "No", 2,3))
MHDF$anonymity <-ifelse(MHDF$anonymity == "Yes", 1,
ifelse(MHDF$anonymity == "No", 2,3))
MHDF$leave <-ifelse(MHDF$leave == "Very easy", 1,
ifelse(MHDF$leave == "Somewhat easy", 2,
ifelse(MHDF$leave == "Very difficult",3,
ifelse(MHDF$leave == "Somewhat difficult",4,5))))
treatment.cor <- cor(MHDF$treatment, MHDF[,-4])
print(treatment.cor)
counts <- table(MHDF$family_history, MHDF$treatment, dnn = c("Family History", "Treatment"))
counts
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Family History", col=c("darkblue","red"),
legend = c("Not Seeking Treatment", "Seeking Treatment"))
seek_help.cor <- cor(MHDF$seek_help, MHDF[,-4])
counts <- table(MHDF$care_options, MHDF$seek_help)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
xlab="Employees Know Care Options", col=c("darkblue","red"),
legend = c("Provide Info","Don't Provide Info" ), beside=TRUE)
seek_help.cor <- cor(MHDF$seek_help, MHDF[,-4])
print(tech_company.cor)
print(seek_help.cor)
counts <- table(MHDF$family_history, MHDF$treatment, dnn = c("Family History", "Treatment"))
counts
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Seeking Treatment", col=c("darkblue","red"),
legend = c("Not Seeking Treatment", "Seeking Treatment"))
counts <- table(MHDF$family_history, MHDF$treatment, dnn = c("Family History", "Treatment"))
counts
seek_help.cor <- cor(MHDF$seek_help, MHDF[,-4])
print(seek_help.cor)
counts <- table(MHDF$care_options, MHDF$seek_help)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
xlab="Employees Have Saught Help", col=c("darkblue","red"),
legend = c("Provide Info","Don't Provide Info" ), beside=TRUE)
seek_help.cor <- cor(MHDF$seek_help, MHDF[,-4])
print(seek_help.cor)
seek_help.cor <- cor(MHDF$seek_help)
seek_help.cor <- cor(MHDF$seek_help, MHDF)
setwd("~/Desktop/Senior Year HW/MGSC_Final")
MHDF <- read.csv(file = 'survey.csv' )
View(MHDF)
summary(MHDF$Country)
MHDF$Country <- ifelse(MHDF$Country == "United States", 1,
ifelse(MHDF$Country == "United Kingdom", 2, 3))
MHDF$self_employed <- ifelse(MHDF$self_employed == "No", 1, 0)
MHDF$family_history <- ifelse(MHDF$family_history == "No", 1, 0)
MHDF$treatment <- ifelse(MHDF$treatment == "No", 1, 0)
MHDF$work_interfere <- ifelse(is.na(MHDF$work_interfere), 5,
ifelse(MHDF$work_interfere == "Often", 2,
ifelse(MHDF$work_interfere == "Rarely", 3,
ifelse(MHDF$work_interfere == "Sometimes", 4, 1))))
MHDF$no_employees <- ifelse(MHDF$no_employees == "1-5", 1,
ifelse(MHDF$no_employees == "6-25", 2,
ifelse(MHDF$no_employees == "26-100", 3,
ifelse(MHDF$no_employees == "100-500", 4,
ifelse(MHDF$no_employees == "500-1000", 5, 6)))))
MHDF$remote_work <- ifelse(MHDF$remote_work == "No", 0, 1)
MHDF$Gender <- ifelse(MHDF$Gender == "F", 0, 1)
MHDF$mental_health_consequence <- ifelse(MHDF$mental_health_consequence == "Yes", 1, ifelse(MHDF$mental_health_consequence == "No", 2, 3))
MHDF$phys_health_consequence <- ifelse(MHDF$phys_health_consequence == "Yes", 1, ifelse(MHDF$phys_health_consequence == "No", 2, 3))
MHDF$coworkers <- ifelse(MHDF$coworkers == "Yes", 1, ifelse(MHDF$coworkers == "No", 2, 3))
MHDF$supervisor <- ifelse(MHDF$supervisor == "Yes", 1, ifelse(MHDF$supervisor == "No", 2, 3))
setwd("~/Desktop/Senior Year HW/MGSC_Final")
MHDF <- read.csv(file = 'survey.csv' )
View(MHDF)
summary(MHDF$Country)
MHDF$Country <- ifelse(MHDF$Country == "United States", 1,
ifelse(MHDF$Country == "United Kingdom", 2, 3))
MHDF$self_employed <- ifelse(MHDF$self_employed == "No", 1, 0)
MHDF$family_history <- ifelse(MHDF$family_history == "No", 1, 0)
MHDF$treatment <- ifelse(MHDF$treatment == "No", 1, 0)
MHDF$work_interfere <- ifelse(is.na(MHDF$work_interfere), 5,
ifelse(MHDF$work_interfere == "Often", 2,
ifelse(MHDF$work_interfere == "Rarely", 3,
ifelse(MHDF$work_interfere == "Sometimes", 4, 1))))
MHDF$no_employees <- ifelse(MHDF$no_employees == "1-5", 1,
ifelse(MHDF$no_employees == "6-25", 2,
ifelse(MHDF$no_employees == "26-100", 3,
ifelse(MHDF$no_employees == "100-500", 4,
ifelse(MHDF$no_employees == "500-1000", 5, 6)))))
MHDF$remote_work <- ifelse(MHDF$remote_work == "No", 0, 1)
MHDF$Gender <- ifelse(MHDF$Gender == "F", 0, 1)
MHDF$mental_health_consequence <- ifelse(MHDF$mental_health_consequence == "Yes", 1, ifelse(MHDF$mental_health_consequence == "No", 2, 3))
MHDF$phys_health_consequence <- ifelse(MHDF$phys_health_consequence == "Yes", 1, ifelse(MHDF$phys_health_consequence == "No", 2, 3))
MHDF$coworkers <- ifelse(MHDF$coworkers == "Yes", 1, ifelse(MHDF$coworkers == "No", 2, 3))
MHDF$supervisor <- ifelse(MHDF$supervisor == "Yes", 1, ifelse(MHDF$supervisor == "No", 2, 3))
MHDF$mental_health_interview <- ifelse(MHDF$mental_health_interview == "Yes", 1, ifelse(MHDF$mental_health_interview == "No", 2, 3))
MHDF$phys_health_interview <- ifelse(MHDF$phys_health_interview == "Yes", 1, ifelse(MHDF$phys_health_interview == "No", 2, 3))
MHDF$mental_vs_physical <- ifelse(MHDF$mental_vs_physical == "Yes", 1, ifelse(MHDF$mental_vs_physical == "No", 2, 3))
MHDF$obs_consequence <- ifelse(MHDF$obs_consequence == "No", 0, 1)
MHDF$tech_company <-ifelse(MHDF$tech_company == "Yes", 1, 0)
MHDF$benefits <-ifelse(MHDF$benefits == "Yes", 1,
ifelse(MHDF$benefits == "No", 2,3))
MHDF$care_options <-ifelse(MHDF$care_options == "Yes", 1,
ifelse(MHDF$care_options == "No", 2,3))
MHDF$wellness_program <-ifelse(MHDF$wellness_program == "Yes", 1,
ifelse(MHDF$wellness_program == "No", 2,3))
MHDF$seek_help <-ifelse(MHDF$seek_help == "Yes", 1,
ifelse(MHDF$seek_help == "No", 2,3))
MHDF$anonymity <-ifelse(MHDF$anonymity == "Yes", 1,
ifelse(MHDF$anonymity == "No", 2,3))
MHDF$leave <-ifelse(MHDF$leave == "Very easy", 1,
ifelse(MHDF$leave == "Somewhat easy", 2,
ifelse(MHDF$leave == "Very difficult",3,
ifelse(MHDF$leave == "Somewhat difficult",4,5))))
treatment.cor <- cor(MHDF$treatment, MHDF)
print(treatment.cor)
counts <- table(MHDF$family_history, MHDF$treatment, dnn = c("Family History", "Treatment"))
counts
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Treatment", col=c("darkblue","red"),
legend = c("Not Seeking Treatment", "Seeking Treatment"))
seek_help.cor <- cor(MHDF$seek_help, MHDF)
print(seek_help.cor)
counts <- table(MHDF$care_options, MHDF$seek_help)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
xlab="Employees Have Saught Help", col=c("darkblue","red"),
legend = c("Provide Info","Don't Provide Info" ), beside=TRUE)
counts <- table(MHDF$care_options, MHDF$seek_help)
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Treatment", col=c("darkblue","red"),
legend = c("Not Seeking Treatment", "Seeking Treatment"))
counts <- table(MHDF$family_history, MHDF$treatment, dnn = c("Family History", "Treatment"))
counts
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Treatment", col=c("darkblue","red"),
legend = c("Not Seeking Treatment", "Seeking Treatment"))
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Treatment", col=c("darkblue","red"),
legend = c("Family History", "No Family History"),
names.arg = ("Not Saught Help", "Saught Helo"))
barplot(counts, main="Mental Health Isues Based on Family History",
xlab="Treatment", col=c("darkblue","red"),
legend = c("Family History", "No Family History"),
names.arg = c("Not Saught Help", "Saught Help"))
seek_help.cor <- cor(MHDF$seek_help, MHDF)
print(seek_help.cor)
gender.cor <- cor(MHDF$Gender, MHDF)
print(gender.cor)
no_employees.cor <- cor(MHDF$no_employees, MHDF)
print(no_employees.cor)
care_options.cor <- cor(MHDF$care_options, MHDF)
print(no_employees.cor)
counts <- table(MHDF$tech_company, MHDF$care_options)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
xlab="Company Provide Mental Health Benefits", col=c("darkblue","red"),
legend = c("Yes","No" ), beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
xlab="Employees Have Saught Help", ylab = "Employees Aware of Mental Healthcare Options", col=c("darkblue","red"),
legend = c("Provide Info","Don't Provide Info" ), beside=TRUE)
barplot(counts, main="Mental Health Issues Based on Family History",
xlab="Treatment", ylab = "Family History",col=c("darkblue","red"),
legend = c("Family History", "No Family History"),
names.arg = c("Not Saught Help", "Saught Help"))
counts <- table(MHDF$family_history, MHDF$treatment, dnn = c("Family History", "Treatment"))
counts
barplot(counts, main="Mental Health Issues Based on Family History",
xlab="Treatment", ylab = "Family History",col=c("darkblue","red"),
legend = c("Family History", "No Family History"),
names.arg = c("Not Saught Help", "Saught Help"))
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Tech Company",
xlab = "Employees Aware of Mental Healthcare Options",
col=c("darkblue","red"), beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Tech Company",
xlab = "Employees Aware of Mental Healthcare Options",
col=c("darkblue","red"),
legend = c("Yes","No" ), beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Tech Company",
xlab = "Employees Aware of Mental Healthcare Options",
col=c("darkblue","red"),
legend = c("Yes","No" ),
names.arg = c("Aware", "Not Aware"),
beside=TRUE))
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Tech Company",
xlab = "Employees Aware of Mental Healthcare Options",
col=c("darkblue","red"),
legend = c("Yes","No" ),
names.arg = c("Aware", "Not Aware"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
names.arg = c("Yes", "No"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
legend = row.names(counts),
names.arg = c("Yes", "No"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
legend = c("No", "Yes"),
names.arg = c("Yes", "No"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
legend = c("No", "Yes"),
names.arg = c("Aware", "Not Aware"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
legend = c("Not Aware","Aware"),
names.arg = c("Yes", "No"),
beside=TRUE)
View(MHDF)
View(MHDF)
counts
counts <- table(MHDF$care_options, MHDF$tech_company)
counts
counts <- table(MHDF$care_options, MHDF$tech_company)
counts
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
legend = c("Not Aware","Aware", "Don't Know"),
names.arg = c("Yes", "No"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "black"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "black", "yellow"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= row.names(counts)
beside=TRUE)
counts <- table(MHDF$care_options, MHDF$tech_company)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= row.names(counts)
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= row.names(counts),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= c("Yes", "No", "Not Sure"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= c("Yes", "No", "Not Sure"),
names.arg = c("Yes", "No"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= c("Yes", "No", "Not Sure"),
names.arg = c("No", "Yes"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= c("Yes", "No", "Not Sure"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= c("Yes", "No", "Not Sure"),
names.arg = c("No", "Yes"),
beside=TRUE)
barplot(counts, main="Employee Knowledge Based on Info Provided to Seek Help",
ylab="Employees Aware of Mental Healthcare Options",
xlab = "Tech Company",
col=c("darkblue","red", "yellow"),
legend= c("Aware", "Not Aware", "Not Sure"),
names.arg = c("No", "Yes"),
beside=TRUE)
counts
88+85+53
care_options.cor <- cor(MHDF$care_options, MHDF)
print(no_employees.cor)
mental_vs_physical.cor <- cor(MHDF$mental_vs_physical, MHDF)
mental_vs_physical.cor <- cor(MHDF$mental_vs_physical, MHDF)
print(no_employees.cor)
print(mental_vs_physical.cor)
counts <- tables(MHDF$leave, MHDF$mental_vs_physical)
counts <- table(MHDF$leave, MHDF$mental_vs_physical)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
beside = TRUE)
counts <- table(MHDF$leave, MHDF$mental_vs_physical)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
beside = TRUE)
counts <- table(MHDF$mental_vs_physical, MHDF$leave)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
beside = TRUE)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = row.names(counts)
beside = TRUE)
counts <- table(MHDF$mental_vs_physical, MHDF$leave)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = row.names(counts)
beside = TRUE)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = row.names(counts),
beside = TRUE)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = row.names(counts),
beside = TRUE)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = c("Yes", "No", "Don't Know")),
col=c("darkblue","red", "yellow"),
beside = TRUE)
barplot(counts, main = "",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = c("Yes", "No", "Don't Know"),
col=c("darkblue","red", "yellow"),
beside = TRUE)
barplot(counts, main = "Mental Health Leave Based on Companies' Mental Health Attitudes",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Mental Health Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = c("Yes", "No", "Don't Know"),
col=c("darkblue","red", "yellow"),
beside = TRUE)
barplot(counts, main = "Mental Health Leave Based on Companies' Mental Health Attitudes",
ylab = "Employers Take Mental Health As Seriously As Physical Health",
xlab = "How Easy to Take Mental Health Leave",
names.arg = c("Very Easy", "Somewhat Easy", "Very Difficult", "Somewhat Difficult", "Don't Know"),
legend = c("Yes", "No", "Don't Know"),
col=c("red","yellow", "blue"),
beside = TRUE)
set.seed(1861)
library('ISLR')
data('Auto')
trainsize <- 0.75
trainInd <- sample(1:nrow(Auto), size = floor(nrow(Auto) * trainsize))
trainCredit <- Auto[trainInd, ]
testCredit <- Auto[-trainInd, ]
install.packages('rpart')
trainAuto <- Auto[trainInd, ]
testAuto <- Auto[-trainInd, ]
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
s
install.packages('rpart')
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- rpart::rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- rpart::rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
plot(mpgTree)
plot(text(mpgTree))
text(mpgTree)
plot(mpgTree, main = text())
plot(mpgTree)
text(mpgTree)
plot.new(mpgTree)
text(mpgTree, use.n = TRUE)
plot(mpgTree)
text(mpgTree, use.n = TRUE)
plot(mpgTree)
text(mpgTree, use.n = TRUE)
text(mpgTree, pretty = 0)
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- rpart::rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- tree(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
install.packages('tree')
install.packages('tree')
mpgTree <- tree(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- tree(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree <- tree::tree(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
plot(mpgTree)
text(mpgTree, pretty = 0)
mpgTree <- rpart::rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
text(mpgTree, pretty = 0)
plot(mpgTree) + text(mpgTree, pretty = 0)
text(mpgTree, pretty = 0)}
text(mpgTree, pretty = 0, use.n = TRUE)
mpgTree.pred <- predict(mpgTree.pred,testAuto,type="class")
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
install.packages('rpart')
install.packages("rpart")
library(rpart)
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
plot(mpgTree)
text(mpgTree, pretty = 0, use.n = TRUE)
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
plot(mpgTree); text(mpgTree, pretty = 0, use.n = TRUE)
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
tree.carseats <- tree(High~.-Sales, data=Carseats, subset=train)
rm(list =ls())
set.seed(1234)
options(scipen=15)
rm(list=ls())
require('ISLR')
require('tree')
attach(Carseats)
hist(Sales)
High = ifelse(Sales<=8,"No","Yes")
Carseats=data.frame(Carseats,High)
tree.carseats = tree(High~.-Sales,data=Carseats)
summary(tree.carseats)
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
set.seed(1861)
library('ISLR')
data('Auto')
trainsize <- 0.75
trainInd <- sample(1:nrow(Auto), size = floor(nrow(Auto) * trainsize))
trainAuto <- Auto[trainInd, ]
testAuto <- Auto[-trainInd, ]
library(rpart)
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto)
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
mpgTree.pred <- predict(mpgTree,testAuto,type="predict")
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
mpgTree.pred <- predict(mpgTree,testAuto,type="c")
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto, subset = trainAuto)
library(rpart)
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = Auto, subset = trainAuto)
mpgTree <- rpart(mpg ~ cylinders + displacement + horsepower + weight + acceleration +
year + origin, data = trainAuto)
plot(mpgTree); text(mpgTree, pretty = 0, use.n = TRUE)
mpgTree.pred <- predict(mpgTree,testAuto,type="class")
mpgTree.pred <- predict(mpgTree,trainAuto,type="class")
mpgTree.pred <- predict(mpgTree,trainAuto,type="vector")
tree.pred <- predict(tree.carseats,Carseats[-train,],type="class")
